<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:NewBrokerApp.Views"
        xmlns:locall="clr-namespace:NewBrokerApp.Views.Company"
       Title="NewBrokerApp"
        xmlns:resx="clr-namespace:NewBrokerApp.Resources" 
        xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
             ios:Page.UseSafeArea="true"
        xmlns:ffimageloadingsvg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
       FlyoutBackgroundColor="White"
           xmlns:vm="clr-namespace:NewBrokerApp.ViewModels"
       FlowDirection="{Binding FlowDirec}"
         xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
       xmlns:circle="clr-namespace:ImageCircle.Forms.Plugin.Abstractions;assembly=ImageCircle.Forms.Plugin"
       x:Class="NewBrokerApp.AppShell">
    <!--FlyoutIcon="side_menu.png"-->
    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->
    <Shell.BindingContext>
        <vm:AppShellViewModel/>
    </Shell.BindingContext>
    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="White" />
                <Setter Property="Shell.ForegroundColor" Value="Gray" />
                <Setter Property="Shell.TitleColor" Value="Black" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="Black"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="red"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />
            
            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="Black"></Setter>
                <Setter Property="HeightRequest" Value="100"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="red" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="red" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="Black" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <Style ApplyToDerivedTypes="True" Class="MenuItemLayoutStyleHidden" TargetType="Layout">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid ColumnDefinitions="*,2*" Margin="20,10,20,0">
                <circle:CircleImage Source="{Binding Avatar}" Aspect="AspectFit" BorderColor="WhiteSmoke" BorderThickness="1" WidthRequest="150" HeightRequest="150" Grid.Column="0"></circle:CircleImage>
                <Label Text="{Binding UserName}" Grid.Column="1" VerticalTextAlignment="Center"></Label>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped"/>
                </Grid.GestureRecognizers>
            </Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>
    <Shell.FlyoutFooterTemplate>
        <DataTemplate>
            <StackLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                <!--IsVisible="{Binding IsLogin}"-->
                <Grid ColumnDefinitions="10,30,0.8*" IsVisible="{Binding IsLogin}"  Margin="0,5,0,15"   Padding="0,10,0,0" RowSpacing="20" ColumnSpacing="10">
                    <ffimageloadingsvg:SvgCachedImage Source="logoutsvgred.svg"
      Margin="5"
               Grid.Column="1"                
       HeightRequest="30" />
                    <Label Grid.Column="2" x:Name="SignOuttxt"
       Text="{Static resx:AppResources.SignOut}"
      TextColor="Red"
       FontSize="15"
       VerticalTextAlignment="Center" />
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped_1"/>
                    </Grid.GestureRecognizers>
                </Grid>
                <StackLayout HorizontalOptions="CenterAndExpand">
                    <Label Text="{Binding VersionNumber}"  HorizontalOptions="CenterAndExpand" FontSize="18" HorizontalTextAlignment="Center" TextColor="Black" x:Name="txtVersion" Grid.Column="1" VerticalTextAlignment="Center"></Label>

                </StackLayout>
            </StackLayout>
            
        </DataTemplate>
    </Shell.FlyoutFooterTemplate>
    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <FlyoutItem FlyoutDisplayOptions="AsMultipleItems" Title="Language" Icon="icon_about.png">
        <ShellContent Title="MapPage" FlyoutItemIsVisible="False" Icon="home.png" Route="HomePage" ContentTemplate="{DataTemplate local:MapPage}" />
        <!--<ShellContent Route="SponsorPage" Title="MapPage" Icon="home.png" ContentTemplate="{DataTemplate local:SponsorPage}" />
        <ShellContent Route="ChangePasswordPage" Title="MapPage" Icon="home.png" ContentTemplate="{DataTemplate local:ChangePasswordPage}" />
        <ShellContent Route="ContactUsPage" Title="MapPage" Icon="home.png" ContentTemplate="{DataTemplate local:ContactUsPage}" />-->
    
    </FlyoutItem>
    <MenuItem Text="{Static resx:AppResources.PersonalData}"  x:Name="txdata" Clicked="MenuItem_Clicked_7"  Routing.Route="WishlistPage" IconImageSource="profile.png" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>
    <!--<MenuItem Text="{Static resx:AppResources.BrokerPoints}"  Clicked="MenuItem_Clicked_9"  Routing.Route="WishlistPage"    IconImageSource="pointsSvg.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>-->
    <!--<MenuItem Text="{Static resx:AppResources.Projects}"  Routing.Route="WishlistPage"  Clicked="MenuItem_Clicked_8"   IconImageSource="Project.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>-->
    <!--<MenuItem Text="{Static resx:AppResources.Wallet}"  Routing.Route="WishlistPage"  Clicked="MenuItem_Clicked_10"   IconImageSource="Project.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>-->

    <ShellContent  x:Name="txtProject"   Icon="Project.svg" Title="{x:Static resx:AppResources.Projects}" ContentTemplate="{DataTemplate locall:AddProjectPage}" />
    <ShellContent  x:Name="txtWallet"    Icon="Project.svg" Title="{x:Static resx:AppResources.Wallet}" ContentTemplate="{DataTemplate locall:WalletPage}" />

    <!--<MenuItem Text="{Static resx:AppResources.Projects}" x:Name="txtProject"   Routing.Route="WishlistPage"  Clicked="MenuItem_Clicked_8"   IconImageSource="Project.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>-->

    <MenuItem Text="{Static resx:AppResources.ChangePassword}"  Clicked="MenuItem_Clicked_4"  Routing.Route="WishlistPage"    IconImageSource="changeSvg.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>
    <MenuItem Text="{Static resx:AppResources.RateUs}"  Clicked="MenuItem_Clicked_1" Routing.Route="WishlistPage"    IconImageSource="rateSvg.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>
    <MenuItem Text="{Static resx:AppResources.Language}"  Clicked="MenuItem_Clicked"  Routing.Route="WishlistPage"    IconImageSource="languageSvg.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>
    <!--<MenuItem Text="{Static resx:AppResources.Sponsor}" Clicked="MenuItem_Clicked_3"  Routing.Route="WishlistPage"    IconImageSource="SponsorSvg.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>-->
    <MenuItem Text="{Static resx:AppResources.ContactUS} "  Clicked="MenuItem_Clicked_2" Routing.Route="WishlistPage"    IconImageSource="phonecall.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>
    <MenuItem  Text="{Static resx:AppResources.DeleteAccount}"  Clicked="MenuItem_Clicked_5" Routing.Route="WishlistPage"    IconImageSource="deleteAccountSvg.svg" StyleClass="MenuItemLayoutStyle" >
    </MenuItem>
    <!--<MenuItem  Text="{Static resx:AppResources.SignOut}"  x:Name="txtSignOut" Clicked="MenuItem_Clicked_6"  Routing.Route="WishlistPage"    IconImageSource="LogoutSvg.svg" StyleClass="MenuItemLayoutStyle" >
   
    </MenuItem>-->
   


    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <!--<MenuItem Text="Logout"   StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>-->

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <!--<TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>-->

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    --> 
    <Shell.ItemTemplate>
        <DataTemplate>
            <Grid ColumnDefinitions="10,30,0.8*" Margin="0,5,0,20" RowSpacing="10" ColumnSpacing="10">
                <ffimageloadingsvg:SvgCachedImage Source="{Binding FlyoutIcon}"
                       Margin="5"
                       Grid.Column="1"
                       HeightRequest="30" />
                <Label 
                        Grid.Column="2"
                       Text="{Binding Title}"
                       TextColor="Black"
                       FontSize="20"
                       VerticalTextAlignment="Center"/>
            </Grid>
        </DataTemplate>
    </Shell.ItemTemplate>
    <!--<Shell.ItemTemplate>
        <DataTemplate>

            <StackLayout HorizontalOptions="FillAndExpand" Orientation="Horizontal">
                

                <ffimageloading:CachedImage  CacheDuration="30" Grid.Column="0"
               WidthRequest="25"
               HeightRequest="25"
               Aspect="AspectFit"
           HorizontalOptions="Start"
           VerticalOptions="CenterAndExpand"
           Source="{Binding Icon}"/>


                <Label Grid.Column="1" 
           VerticalOptions="Center"
                    HorizontalOptions="StartAndExpand"
           FontSize="20"
           TextColor="Black"
           Text="{Binding Title}"/>






                </StackLayout>
            
        </DataTemplate>
    </Shell.ItemTemplate>-->
    <Shell.MenuItemTemplate>
        <DataTemplate>
            
                <Grid ColumnDefinitions="10,30,0.8*" Margin="0,5,0,15"  Padding="0,10,0,0" RowSpacing="20" ColumnSpacing="10">
                    <ffimageloadingsvg:SvgCachedImage Source="{Binding Icon}"
                      Margin="5"
                               Grid.Column="1"                
                       HeightRequest="30" />
                    <Label Grid.Column="2"
                       Text="{Binding Text}"
                      TextColor="Black"
                       FontSize="15"
                       VerticalTextAlignment="Center" />
                </Grid>

           
        </DataTemplate>
    </Shell.MenuItemTemplate>
</Shell>
